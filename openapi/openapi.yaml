openapi: 3.1.0
info:
  title: PEAC Protocol API v0.9.12
  version: 0.9.12
  description: |
    PEAC Protocol v0.9.12 Standards Alignment API

    Multi-rail HTTP 402 payment system with AIPREF policy integration,
    Ed25519 JWS receipts, and RFC 9457 Problem Details error responses.

    **Breaking Changes from v0.9.11:**
    - PEAC-Receipt header (x-peac-* headers removed)
    - RFC 9457 Problem Details for all errors
    - Enhanced crypto validation (EdDSA-only)
    - AIPREF snapshot integration

  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: PEAC Protocol Team
    url: https://github.com/peacprotocol/peac

tags:
  - name: discovery
    description: Discovery endpoints (.well-known)
  - name: verification
    description: Receipt verification operations
  - name: protected
    description: Protected resources requiring payment

servers:
  - url: https://{host}
    variables:
      host:
        default: api.example.com

security:
  - PeacReceipt: []

paths:
  /.well-known/peac.txt:
    get:
      tags: [discovery]
      summary: PEAC Discovery Configuration
      description: |
        Returns PEAC configuration in standardized format (â‰¤20 lines).
        Includes payment rails, AIPREF URL, verification endpoint.
      operationId: getPeacTxt
      security: [] # Public endpoint
      responses:
        '200':
          description: PEAC configuration
          headers:
            Cache-Control:
              schema: { type: string }
              example: 'public, max-age=3600'
            ETag:
              schema: { type: string }
              example: '"v0.9.12-2025-09"'
          content:
            text/plain:
              schema:
                type: string
                example: |
                  version: 0.9.12
                  preferences: https://example.com/.well-known/aipref.json
                  access_control: http-402
                  payments: ["x402", "l402"]
                  provenance: c2pa
                  receipts: required
                  verify: https://example.com/peac/verify
                  public_keys:
                    - kid: "site-2025-09" alg: "EdDSA" key: "MCowBQYDK2VwAyEAGb9..."
        '404':
          $ref: '#/components/responses/NotFound'

  /.well-known/aipref.json:
    get:
      tags: [discovery]
      summary: AIPREF Policy Configuration
      description: AI preference policy in AIPREF format
      operationId: getAipref
      security: [] # Public endpoint
      responses:
        '200':
          description: AIPREF policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiprefPolicy'
              example:
                version: '0.1'
                train-ai: false
                crawl: true
                commercial: false
                rate-limit:
                  requests: 100
                  window: '1m'
        '404':
          $ref: '#/components/responses/NotFound'

  /peac/verify:
    post:
      tags: [verification]
      summary: Verify PEAC Receipt
      description: |
        Verifies a PEAC receipt (compact JWS format) and returns validation results.
        Checks signature, schema compliance, AIPREF policy, and payment evidence.
      operationId: verifyReceipt
      security: [] # Public verification endpoint
      requestBody:
        required: true
        content:
          application/jose:
            schema:
              type: string
              description: Compact JWS of the PEAC receipt
              example: 'eyJhbGciOiJFZERTQSIsImtpZCI6InNpdGUtMjAyNS0wOSJ9.eyJzdWJqZWN0Ijp7InVyaSI6Imh0dHBzOi8vZXhhbXBsZS5jb20vcmVzb3VyY2UifSwiYWlwcmVmIjp7InN0YXR1cyI6ImFjdGl2ZSIsImNoZWNrZWRfYXQiOiIyMDI1LTA5LTA1VDEyOjAwOjAwWiIsInNuYXBzaG90Ijp7InRyYWluLWFpIjpmYWxzZSwiY3Jhd2wiOnRydWV9LCJkaWdlc3QiOnsiYWxnIjoiSkNTLVNIQTI1NiIsInZhbCI6ImFiYzEyMyJ9fSwiZW5mb3JjZW1lbnQiOnsibWV0aG9kIjoibm9uZSJ9LCJpc3N1ZWRfYXQiOiIyMDI1LTA5LTA1VDEyOjAwOjAwWiIsImtpZCI6InNpdGUtMjAyNS0wOSJ9.signature'
          application/json:
            schema:
              type: object
              required: [jws]
              properties:
                jws:
                  type: string
                  description: Compact JWS of the PEAC receipt
      responses:
        '200':
          description: Receipt is valid
          headers:
            PEAC-Receipt:
              description: Echo of the validated receipt
              schema: { type: string }
          content:
            application/json:
              schema:
                type: object
                required: [status, receipt, verified_at]
                properties:
                  status:
                    type: string
                    enum: [valid]
                  receipt:
                    $ref: '#/components/schemas/Receipt'
                  verified_at:
                    type: string
                    format: date-time
                  kid:
                    type: string
              example:
                status: 'valid'
                receipt:
                  subject:
                    uri: 'https://example.com/resource'
                  aipref:
                    status: 'active'
                    checked_at: '2025-09-05T12:00:00Z'
                    snapshot:
                      train-ai: false
                      crawl: true
                    digest:
                      alg: 'JCS-SHA256'
                      val: 'abc123'
                  enforcement:
                    method: 'none'
                  issued_at: '2025-09-05T12:00:00Z'
                  kid: 'site-2025-09'
                verified_at: '2025-09-05T12:00:30Z'
                kid: 'site-2025-09'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/InvalidProof'
        '422':
          $ref: '#/components/responses/PolicyFailed'
        '429':
          $ref: '#/components/responses/RateLimited'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/resource:
    get:
      tags: [protected]
      summary: Access Protected Resource
      description: |
        Example protected resource that requires payment via HTTP 402.
        Demonstrates complete payment negotiation and receipt validation flow.
      operationId: getProtectedResource
      security:
        - PeacReceipt: []
      parameters:
        - name: Accept-Payments
          in: header
          required: false
          description: Preferred payment rails with quality factors
          schema: { type: string }
          example: 'x402;q=1.0, l402;q=0.8'
      responses:
        '200':
          description: Protected content served
          headers:
            PEAC-Receipt:
              description: Echo of validated receipt
              schema: { type: string }
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: { type: string }
                  served_at: { type: string, format: date-time }
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '401':
          $ref: '#/components/responses/InvalidProof'

components:
  responses:
    BadRequest:
      description: Bad Request - Schema validation failed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            type: 'https://peac.dev/errors/schema-validation-failed'
            title: 'Receipt Schema Validation Failed'
            status: 400
            detail: 'Missing required field: aipref.status'
            instance: '/peac/verify'
            errors:
              - field: 'aipref.status'
                code: 'required'
                message: 'Field is required'

    InvalidProof:
      description: Unauthorized - Invalid signature or unknown key
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            type: 'https://peac.dev/errors/invalid-proof'
            title: 'Receipt Signature Verification Failed'
            status: 401
            detail: 'EdDSA signature verification failed for kid: site-2025-09'
            instance: '/peac/verify'
            kid: 'site-2025-09'
            algorithm: 'EdDSA'

    PaymentRequired:
      description: Payment Required - HTTP 402 with payment challenges
      headers:
        WWW-Authenticate:
          schema: { type: string }
          example: 'x402 challenge="x402:pay:0x123@1:2.50:USD", l402 challenge="l402:invoice:lnbc..."'
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetails'
              - type: object
                properties:
                  accept-payment:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentChallenge'
          example:
            type: 'https://www.rfc-editor.org/rfc/rfc9110.html#status.402'
            title: 'Payment Required'
            status: 402
            detail: 'Access to this resource requires payment'
            instance: '/api/resource'
            accept-payment:
              - rail: 'x402'
                challenge: 'x402:pay:0x123...abc@1:2.50:USD'
                estimate: { value: '2.50', currency: 'USD' }
              - rail: 'l402'
                challenge: 'l402:invoice:lnbc2500n1...'
                estimate: { value: '2.50', currency: 'USD' }

    PolicyFailed:
      description: Unprocessable Entity - AIPREF policy precondition failed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            type: 'https://peac.dev/errors/policy-precondition-failed'
            title: 'AIPREF Policy Precondition Not Met'
            status: 422
            detail: 'Resource requires train-ai=false but policy allows train-ai=true'
            instance: '/api/resource'
            policy_mismatch:
              required: { 'train-ai': false }
              provided: { 'train-ai': true }

    RateLimited:
      description: Too Many Requests - Rate limit exceeded
      headers:
        Retry-After:
          schema: { type: integer }
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            type: 'https://peac.dev/errors/rate-limited'
            title: 'Rate Limit Exceeded'
            status: 429
            detail: 'Exceeded 100 requests per minute limit'
            instance: '/peac/verify'
            retry_after: 30
            limit:
              requests: 100
              window: '1m'
              remaining: 0
              reset_at: '2025-09-05T12:01:00Z'

    ServiceUnavailable:
      description: Service Unavailable - Payment rail unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            type: 'https://peac.dev/errors/rail-unavailable'
            title: 'Payment Rail Temporarily Unavailable'
            status: 503
            detail: 'Tempo payment rail is currently unavailable'
            instance: '/api/resource'
            rail: 'tempo'
            alternative_rails: ['x402', 'l402']
            retry_after: 60

    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

  schemas:
    ProblemDetails:
      type: object
      description: RFC 9457 Problem Details for HTTP APIs
      required: [type, title, status]
      additionalProperties: true # Allow extension fields per RFC 9457
      properties:
        type:
          type: string
          format: uri
          description: Problem type identifier
        title:
          type: string
          description: Short human-readable summary
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Human-readable explanation
        instance:
          type: string
          description: URI reference that identifies the specific occurrence

    Receipt:
      type: object
      description: PEAC Protocol receipt (Core Receipt v1)
      required: [subject, aipref, enforcement, issued_at, kid]
      properties:
        subject:
          type: object
          required: [uri]
          properties:
            uri:
              type: string
              format: uri
              description: Resource URI
            hash:
              type: object
              properties:
                alg: { type: string, example: 'SHA-256' }
                val: { type: string }
        aipref:
          type: object
          required: [status, checked_at]
          properties:
            status:
              type: string
              enum: [active, not_found, error, not_applicable]
            checked_at:
              type: string
              format: date-time
            snapshot:
              type: object
              additionalProperties: true
              description: AIPREF policy snapshot
            digest:
              type: object
              properties:
                alg: { const: 'JCS-SHA256' }
                val: { type: string }
            reason:
              type: string
              description: Error reason if status != active
        enforcement:
          type: object
          required: [method]
          properties:
            method:
              type: string
              enum: [http-402, none]
            status:
              type: string
              enum: [required, fulfilled]
        payment:
          type: object
          description: Required if enforcement.method == http-402
          properties:
            rail:
              type: string
              enum: [x402, l402, tempo, stripe]
            status:
              type: string
              enum: [pending, settled, failed]
            amount:
              type: object
              properties:
                value: { type: string }
                currency: { type: string }
            evidence:
              type: object
              properties:
                provider_ids:
                  type: array
                  items: { type: string }
                proof: { type: string }
        issued_at:
          type: string
          format: date-time
          description: Receipt issuance timestamp (UTC)
        kid:
          type: string
          description: Key identifier for signature verification
        ext:
          type: object
          additionalProperties: true
          description: Extension fields

    PaymentChallenge:
      type: object
      required: [rail, challenge, estimate]
      properties:
        rail:
          type: string
          enum: [x402, l402, tempo, stripe]
        challenge:
          type: string
          description: Rail-specific payment challenge
        estimate:
          type: object
          properties:
            value: { type: string }
            currency: { type: string }

    AiprefPolicy:
      type: object
      description: AIPREF policy configuration
      properties:
        version: { type: string }
        train-ai: { type: boolean }
        crawl: { type: boolean }
        commercial: { type: boolean }
        rate-limit:
          type: object
          properties:
            requests: { type: integer }
            window: { type: string }

  securitySchemes:
    PeacReceipt:
      type: apiKey
      in: header
      name: PEAC-Receipt
      description: |
        PEAC Protocol receipt in compact JWS format.
        Contains cryptographic proof of payment and policy compliance.
